module OodSupport
  # A helper object that defines a generic ACL entry
  class ACLEntry
    include Comparable

    # The principle of this entry
    # @return [String] principle of entry
    attr_reader :principle

    # Generate an entry by parsing a string
    # @param entry [#to_s] string describing entry
    # @return [ACLEntry] entry generated by string
    def self.parse(entry:)
      new(principle: entry.to_s.strip)
    end

    # @param principle [#to_s] principle for this ACL entry
    def initialize(principle:)
      @principle = principle.to_s
    end

    # Is this an "allow" ACL entry
    # @return [Boolean] is this an allow entry
    def is_allow?
      true
    end

    # Is this a "deny" ACL entry
    # @return [Boolean] is this a deny entry
    def is_deny?
      !is_allow?
    end

    # Do the requested args match this ACL entry?
    # @params principle [String] requested principle
    # @return [Boolean] does this match this entry
    def match(principle:)
      self.principle == principle
    end

    # Convert object to string
    # @return [String] the string describing this object
    def to_s
      principle
    end

    # The comparison operator for sorting values
    # @param other [#to_s] entry to compare against
    # @return [Boolean] how acls compare
    def <=>(other)
      to_s <=> other
    end

    # Checks whether two ACLEntry objects are completely identical to each
    # other
    # @param other [ACLEntry] entry to compare against
    # @return [Boolean] whether same objects
    def eql?(other)
      [self.class, principle] == [other.class, other.principle]
    end

    # Generates a hash value for this object
    # @return [Fixnum] hash value of object
    def hash
      [self.class, principle].hash
    end
  end
end
